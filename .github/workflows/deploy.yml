name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NODE_ENV: production
      NEXT_PUBLIC_BASE_PATH: /prompt
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clean install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json
          npm install

      - name: Install Tailwind CSS
        run: npm install -D tailwindcss@latest postcss@latest autoprefixer@latest

      - name: Create Tailwind Config
        run: |
          cat > tailwind.config.js << EOL
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
              './src/components/**/*.{js,ts,jsx,tsx,mdx}',
              './src/app/**/*.{js,ts,jsx,tsx,mdx}',
            ],
            theme: {
              extend: {},
            },
            plugins: [],
          }
          EOL

      - name: Create PostCSS Config
        run: |
          cat > postcss.config.js << EOL
          module.exports = {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          }
          EOL

      - name: Build Project
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
